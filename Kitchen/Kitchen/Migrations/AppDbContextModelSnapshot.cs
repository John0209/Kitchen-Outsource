// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeCategoryEnum.DbContext;

#nullable disable

namespace Kitchen.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.MealType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("MealTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Dessert"
                        });
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExpireTime")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpireTime = 1,
                            Price = 80000m
                        },
                        new
                        {
                            Id = 2,
                            ExpireTime = 2,
                            Price = 150000m
                        },
                        new
                        {
                            Id = 3,
                            ExpireTime = 3,
                            Price = 1600000m
                        });
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MealTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PosterId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId")
                        .IsUnique();

                    b.HasIndex("MealTypeId");

                    b.HasIndex("PosterId");

                    b.HasIndex("RecipeCategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Protein in eggs is a source of essential amino acids that play an important role in the body, especially for the development of both weight and height in children. Protein in eggs helps maintain and repair body tissues, including muscles. Lecithin helps lose weight, breaks down and disperses fat in food. In addition, eggs contain many vitamins and minerals necessary for the brain and nervous system to function effectively. Vitamin A, B12 and selenium in eggs help strengthen the immune system. Choline in eggs plays an important role in breaking down the amino acid homocysteine, a key cause of heart disease. Folic acid in eggs helps prevent birth defects in children, and lutein and zeaxanthin prevent macular degeneration. In addition, protein in eggs will help you feel full longer, limit frequent hunger, and reduce calories in the body.",
                            ImageUrl = "",
                            IngredientId = 1,
                            MealTypeId = 1,
                            PostDate = new DateTime(2024, 9, 20, 14, 3, 30, 189, DateTimeKind.Local).AddTicks(528),
                            PosterId = 1,
                            RecipeCategoryId = 1,
                            Title = "Vegetable egg rolls",
                            VideoUrl = ""
                        });
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Avarta")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<int?>("MembershipId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VerifyCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MembershipId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "admin",
                            Name = "John Administrator",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "4 chicken eggs.1 Onion.1/2 carrot.Green onions 2 branches",
                            NumberOfPeople = 2
                        });
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PostCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PosterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PostCategoryId");

                    b.HasIndex("PosterId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.PostCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("PostCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Kitchen Story"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Handbooks And tip"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Knowledge"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "DeliciousFood"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Explore"
                        });
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.RecipeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("RecipeCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Daily"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Vegetarian"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Dietary"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Exercise"
                        });
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Tutorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("StepContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("StepTile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Tutorials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeId = 1,
                            StepContent = "Peel the carrots, wash them and cut them into long pieces\nCut off the 2 ends and then remove the fibers from both sides of the string beans, rinse with water and put in a basket to drain.\nPut the pot on the stove, add 200ml of water, boil over high heat. When the water boils, add 1/2 teaspoon of salt to the pot. Add carrots and string beans to a pot of boiling water and boil for about 5-7 minutes. Remove to a bowl of ice cold water and soak for 5 minutes, then remove to a plate to drain. Beat the eggs",
                            StepTile = "Step 1 - Prepare vegetables"
                        },
                        new
                        {
                            Id = 2,
                            RecipeId = 1,
                            StepContent = "Crack 4 eggs into a clean bowl, season with 1 tablespoon of seasoning powder, beat well until the yolks and whites blend together.",
                            StepTile = "Step 2 - Crack"
                        },
                        new
                        {
                            Id = 3,
                            RecipeId = 1,
                            StepContent = "Place the pan on the stove, turn on medium heat and add 1 tablespoon of cooking oil to the pan\nWait for the oil to heat up, then add the eggs and fry for about 3-5 minutes\nWhen the eggs are cooked, put them on a plate, use a spoon to spread the raw sausage on top of the eggs, then add the string beans and carrots, use your hands to roll the ingredients tightly",
                            StepTile = "Step 3 - Frie eggs"
                        },
                        new
                        {
                            Id = 4,
                            RecipeId = 1,
                            StepContent = "Put the water on the stove, place the steamer basket on the pot, put the rolled eggs in the basket and steam for 7-10 minutes. Wait for the water to boil, then slice the eggs into circles about 1 inch long, arrange them on a plate to enjoy",
                            StepTile = "Step 4 - Put the water"
                        });
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Comment", b =>
                {
                    b.HasOne("RecipeCategoryEnum.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kitchen.Infrastructure.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Recipe", b =>
                {
                    b.HasOne("RecipeCategoryEnum.Entities.Ingredient", "Ingredient")
                        .WithOne("Recipe")
                        .HasForeignKey("Kitchen.Infrastructure.Entities.Recipe", "IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kitchen.Infrastructure.Entities.MealType", "MealType")
                        .WithMany("Recipes")
                        .HasForeignKey("MealTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeCategoryEnum.Entities.Admin", "Poster")
                        .WithMany("Recipes")
                        .HasForeignKey("PosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeCategoryEnum.Entities.RecipeCategory", "RecipeCategory")
                        .WithMany("Recipes")
                        .HasForeignKey("RecipeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("MealType");

                    b.Navigation("Poster");

                    b.Navigation("RecipeCategory");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.User", b =>
                {
                    b.HasOne("Kitchen.Infrastructure.Entities.Membership", "Membership")
                        .WithMany("Users")
                        .HasForeignKey("MembershipId");

                    b.Navigation("Membership");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Post", b =>
                {
                    b.HasOne("RecipeCategoryEnum.Entities.PostCategory", "PostCategory")
                        .WithMany("Posts")
                        .HasForeignKey("PostCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kitchen.Infrastructure.Entities.User", "Poster")
                        .WithMany("Posts")
                        .HasForeignKey("PosterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PostCategory");

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Tutorial", b =>
                {
                    b.HasOne("Kitchen.Infrastructure.Entities.Recipe", "Recipe")
                        .WithMany("Tutorials")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.MealType", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Membership", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.Recipe", b =>
                {
                    b.Navigation("Tutorials");
                });

            modelBuilder.Entity("Kitchen.Infrastructure.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Admin", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Ingredient", b =>
                {
                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.PostCategory", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("RecipeCategoryEnum.Entities.RecipeCategory", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
